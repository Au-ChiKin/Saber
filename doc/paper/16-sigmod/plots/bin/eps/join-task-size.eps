%!PS-Adobe-2.0 EPSF-2.0
%%Title: bin/eps/join-task-size.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Mon Aug 29 08:59:12 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 518 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -133 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 518 50 lineto 518 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bin/eps/join-task-size.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (akolious)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 29 08:59:12 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 400 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 9360.00 5040.00 BoxColFill} if
2.000 UL
LTb
LCb setrgbcolor
1600 1280 M
63 0 V
stroke
1360 1280 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0)]
] -133.3 MRshow
2.000 UL
LTb
LCb setrgbcolor
1600 2100 M
63 0 V
stroke
1360 2100 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0.1)]
] -133.3 MRshow
2.000 UL
LTb
LCb setrgbcolor
1600 2920 M
63 0 V
stroke
1360 2920 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0.2)]
] -133.3 MRshow
2.000 UL
LTb
LCb setrgbcolor
1600 3739 M
63 0 V
stroke
1360 3739 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0.3)]
] -133.3 MRshow
2.000 UL
LTb
LCb setrgbcolor
1600 4559 M
63 0 V
stroke
1360 4559 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0.4)]
] -133.3 MRshow
2.000 UL
LTb
LCb setrgbcolor
2340 1280 M
0 63 V
0 3216 R
0 -63 V
stroke
2340 880 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 64)]
] -133.3 MCshow
2.000 UL
LTb
LCb setrgbcolor
3080 1280 M
0 31 V
0 3248 R
0 -31 V
3819 1280 M
0 63 V
0 3216 R
0 -63 V
stroke
3819 880 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 256)]
] -133.3 MCshow
2.000 UL
LTb
LCb setrgbcolor
4559 1280 M
0 31 V
0 3248 R
0 -31 V
5299 1280 M
0 63 V
0 3216 R
0 -63 V
stroke
5299 880 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 1024)]
] -133.3 MCshow
2.000 UL
LTb
LCb setrgbcolor
6039 1280 M
0 31 V
0 3248 R
0 -31 V
6778 1280 M
0 63 V
0 3216 R
0 -63 V
stroke
6778 880 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 4096)]
] -133.3 MCshow
2.000 UL
LTb
LCb setrgbcolor
7518 1280 M
-63 0 V
stroke
7758 1280 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 0)]
] -133.3 MLshow
2.000 UL
LTb
LCb setrgbcolor
7518 2100 M
-63 0 V
stroke
7758 2100 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 1)]
] -133.3 MLshow
2.000 UL
LTb
LCb setrgbcolor
7518 2920 M
-63 0 V
stroke
7758 2920 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 2)]
] -133.3 MLshow
2.000 UL
LTb
LCb setrgbcolor
7518 3739 M
-63 0 V
stroke
7758 3739 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 3)]
] -133.3 MLshow
2.000 UL
LTb
LCb setrgbcolor
7518 4559 M
-63 0 V
stroke
7758 4559 M
[ [(Helvetica) 400.0 0.0 true true 0 ( 4)]
] -133.3 MLshow
2.000 UL
LTb
LCb setrgbcolor
2.000 UL
LTb
LCb setrgbcolor
1600 4559 N
0 -3279 V
5918 0 V
0 3279 V
-5918 0 V
Z stroke
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
320 2919 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 400.0 0.0 true true 0 (Throughput \(GB/s\))]
] -133.3 MCshow
grestore
LTb
LCb setrgbcolor
8437 2919 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 400.0 0.0 true true 0 (Latency \(sec\))]
] -133.3 MCshow
grestore
LTb
LCb setrgbcolor
4559 280 M
[ [(Helvetica) 400.0 0.0 true true 0 (Query Task Size \(KB\))]
] -133.3 MCshow
LTb
% Begin plot #1
0.000 UP
2.000 UL
LTb
0.75 0.75 0.75 C 2340 1549 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
709 582 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
708 -59 R
0 253 V
-31 -253 R
62 0 V
-62 253 R
62 0 V
709 28 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
709 208 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
709 -151 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
708 -522 R
0 551 V
-31 -551 R
62 0 V
-62 551 R
62 0 V
% End plot #1
% Begin plot #2
3.000 UP
stroke
3.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
5080 4346 M
[ [(Helvetica) 300.0 0.0 true true 0 (Saber)]
] -100.0 MRshow
3.000 UP
3.000 UL
LTb
LCb setrgbcolor
5260 4346 M
783 0 V
2340 1571 M
740 728 V
739 189 V
740 180 V
740 300 V
740 -35 V
739 -200 V
2340 1571 Crs
3080 2299 Crs
3819 2488 Crs
4559 2668 Crs
5299 2968 Crs
6039 2933 Crs
6778 2733 Crs
5651 4346 Crs
% End plot #2
% Begin plot #3
0.000 UP
2.000 UL
LTb
0.75 0.75 0.75 C 2340 1362 M
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
709 172 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
708 330 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
709 666 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
709 -16 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
709 -56 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
708 -92 R
0 126 V
-31 -126 R
62 0 V
-62 126 R
62 0 V
709 -400 R
0 654 V
-31 -654 R
31 0 V
-31 654 R
31 0 V
% End plot #3
% Begin plot #4
3.000 UP
stroke
6.000 UL
LTb
LT1
LCb setrgbcolor
LCb setrgbcolor
5080 4046 M
[ [(Helvetica) 300.0 0.0 true true 0 (Saber \(CPU only\))]
] -100.0 MRshow
3.000 UP
6.000 UL
LTb
LT1
LCb setrgbcolor
5260 4046 M
783 0 V
2340 1365 M
740 187 V
739 362 V
740 704 V
740 24 V
740 -6 V
739 -2 V
740 -10 V
2340 1365 Star
3080 1552 Star
3819 1914 Star
4559 2618 Star
5299 2642 Star
6039 2636 Star
6778 2634 Star
7518 2624 Star
5651 4046 Star
% End plot #4
% Begin plot #5
0.000 UP
2.000 UL
LTb
0.75 0.75 0.75 C 2340 1339 M
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
709 533 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
708 330 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
709 -184 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
709 38 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
709 -451 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
708 -269 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
709 -218 R
0 143 V
-31 -143 R
31 0 V
-31 143 R
31 0 V
% End plot #5
% Begin plot #6
3.000 UP
stroke
6.000 UL
LTb
LT2
LCb setrgbcolor
LCb setrgbcolor
5080 3746 M
[ [(Helvetica) 300.0 0.0 true true 0 (Saber \(GPGPU only\))]
] -100.0 MRshow
3.000 UP
6.000 UL
LTb
LT2
LCb setrgbcolor
5260 3746 M
783 0 V
2340 1339 M
740 544 V
739 347 V
740 -171 V
740 59 V
740 -418 V
739 -210 V
740 -109 V
2340 1339 Pls
3080 1883 Pls
3819 2230 Pls
4559 2059 Pls
5299 2118 Pls
6039 1700 Pls
6778 1490 Pls
7518 1381 Pls
5651 3746 Pls
% End plot #6
% Begin plot #7
1.000 UL
LTb
0.40 0.40 0.40 C LCb setrgbcolor
5080 3446 M
[ [(Helvetica) 300.0 0.0 true true 0 (Saber latency)]
] -100.0 MRshow
1.000 UL
LTb
0.40 0.40 0.40 C 5260 3371 783 150 80 -45 1 PatternFill
5260 3371 N
783 0 V
0 150 V
-783 0 V
0 -150 V
Z stroke
1.000 UL
LTb
0.40 0.40 0.40 C 2266 1622 148 26 80 -45 1 PatternFill
2340 1598 M
0 24 V
0 26 R
0 148 V
stroke
2266 1622 N
148 0 V
0 26 V
-148 0 V
0 -26 V
Z stroke
2266 1796 M
148 0 V
2266 1598 M
148 0 V
stroke
3006 1468 148 28 80 -45 1 PatternFill
3080 1448 M
0 20 V
0 28 R
0 89 V
stroke
3006 1468 N
148 0 V
0 28 V
-148 0 V
0 -28 V
Z stroke
3006 1585 M
148 0 V
3006 1448 M
148 0 V
stroke
3745 1439 148 23 80 -45 1 PatternFill
3819 1418 M
0 21 V
0 23 R
0 78 V
stroke
3745 1439 N
148 0 V
0 23 V
-148 0 V
0 -23 V
Z stroke
3745 1540 M
148 0 V
3745 1418 M
148 0 V
stroke
4485 1427 148 10 80 -45 1 PatternFill
4559 1414 M
0 13 V
0 10 R
0 26 V
stroke
4485 1427 N
148 0 V
0 10 V
-148 0 V
0 -10 V
Z stroke
4485 1463 M
148 0 V
-148 -49 R
148 0 V
stroke
5225 1400 148 7 80 -45 1 PatternFill
5299 1390 M
0 10 V
0 7 R
0 50 V
stroke
5225 1400 N
148 0 V
0 7 V
-148 0 V
0 -7 V
Z stroke
5225 1457 M
148 0 V
-148 -67 R
148 0 V
stroke
5965 1518 148 32 80 -45 1 PatternFill
6039 1492 M
0 26 V
0 32 R
0 47 V
stroke
5965 1518 N
148 0 V
0 32 V
-148 0 V
0 -32 V
Z stroke
5965 1597 M
148 0 V
5965 1492 M
148 0 V
stroke
6704 2254 148 359 80 -45 1 PatternFill
6778 2211 M
0 43 V
0 359 R
0 130 V
stroke
6704 2254 N
148 0 V
0 359 V
-148 0 V
0 -359 V
Z stroke
6704 2743 M
148 0 V
6704 2211 M
148 0 V
% End plot #7
% Begin plot #8
stroke
LTb
0.40 0.40 0.40 C 2266 1631 148 0 80 -45 1 PatternFill
2340 1631 M
stroke
2266 1631 N
148 0 V
-148 0 V
Z stroke
3006 1483 148 0 80 -45 1 PatternFill
3080 1483 M
stroke
3006 1483 N
148 0 V
-148 0 V
Z stroke
3745 1453 148 0 80 -45 1 PatternFill
3819 1453 M
stroke
3745 1453 N
148 0 V
-148 0 V
Z stroke
4485 1429 148 0 80 -45 1 PatternFill
4559 1429 M
stroke
4485 1429 N
148 0 V
-148 0 V
Z stroke
5225 1404 148 0 80 -45 1 PatternFill
5299 1404 M
stroke
5225 1404 N
148 0 V
-148 0 V
Z stroke
5965 1534 148 0 80 -45 1 PatternFill
6039 1534 M
stroke
5965 1534 N
148 0 V
-148 0 V
Z stroke
6704 2394 148 0 80 -45 1 PatternFill
6778 2394 M
stroke
6704 2394 N
148 0 V
-148 0 V
Z stroke
% End plot #8
2.000 UL
LTb
LCb setrgbcolor
2.000 UL
LTb
LCb setrgbcolor
1600 4559 N
0 -3279 V
5918 0 V
0 3279 V
-5918 0 V
Z stroke
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
